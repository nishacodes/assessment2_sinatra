What is Sinatra? Where does it run?

Sinatra is a framework for Ruby that runs on the server side and allows Ruby applications to be viewed on the web. It's also a framework that allows Ruby application to be more robust because they can incorporate stylesheets and Javascript.


What is a Gemfile? How do you use it in your Sinatra Application? Give step by step instructions.

A Gemfile is a list of all the gems used in your Sinatra application. It sources from rubygems.org which needs to be listed first. Then list out all the other gems your application requires. After you add/remove/edit any gems, run $ bundle to lock these gems in. You will see all the gems your application has access to in Gemfile.lock, which is a file that is autogenerated when gems are bundled.

You can also specify certain gems to be used only in production or development by wrapping them in a method, like so:

group :development do 
  gem 'shotgun' 
  gem 'tux' 
end

What is an ORM? What are the basic features of an ORM? Why is it helpful?

ORM stands for Object Relational Mapper. It is a framework that simplifies creating and updating databases in applications. It's helpful because it creates a connection between the application and the database, and comes with packaged methods that help you manipulate the database. It takes the structure of the applications classes and objects and maps them to database tables, such that each class becomes a table and each object becomes a row in that table. 

Three types of ORMs that we learned are ActiveRecord, Datamapper and Sequel. Active Record, for example has methods like 'new', 'create', 'delete', etc. which run the appropriate MySQL methods to manipulate the DB. This helps ensure the things that happen in the model are also happening in the database

Features
- migrations - instructions that inform the database on how to create tables
- methods - packaged CRUD methods that can be used within the class

What is the public folder? What do we use it for?

The public folder is where all the static assets of the application are stored, such as stylehsheets, images, and javascript. The interesting thing to note about this folder is the way it is referenced. On the server it can be referenced via '/public' but on the client it is in the root directory '/'


What is REST? Why is it useful?

It stands for Representational State Transfer. It has something to do with the CRUD routes we typically have for a resource:

index, new, create, show, edit, update, delete


Suppose I, with my browser, send an HTTP get request to the route that will render the view of all the SpaceCats. Walk me through step by step how your application handles that request.

1) The HTTP request will be received by the app's controller, or app.rb. 
2) This file will look for a matching route to GET '/index' (or whatever was typed as a URL in the browser)
3) If a route is matched, it will then go line by line within that route. 
4) If instance methods are called, it will look to the model or class for the necessary information
5) The model might need to grab data from the database table associated with it
6) The model grabs the data and passes it back to app.rb, where it's stored in a variable
7) All logic will be cycled the same way as above
8) Then it pass all of this information to the view that is stated
9) The view is an erb or haml document that compiles to HTML but also understands Ruby. It details what should be displayed on the page. 
10) The view passes a string back to app.rb with all of its information
11) That string is passed back to the browser and rendered on the page

